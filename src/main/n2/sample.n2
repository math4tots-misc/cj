

struct Foo {
    int a
    int b
}

int Foo.sum(Foo self) = self.a + self.b

template[T] struct Bar {
    T t
}

int main() {
    auto foo = Foo(a = 3, b = 5)
    print("Hello world!")
    print(2 + 3)
    int a = 2
    auto b = 7
    print(a + b + 7)
    print("foo.a = " + repr(foo.a))
    print("foo.b = " + repr(foo.b))
    print("foo = " + repr(foo))
    print(foo)
    print("len(str) = " + repr(len!("Hello")))
    print2[str]("using print2")
    print("sum = " + repr(foo.sum()))
    print("list = " + repr([1, 2, 3]))
    print("len(list) = " + repr(len!([1, 2, 3])))

    auto bar = Bar[str]("Hello bar")
    print(bar)
    print("bar.t = " + bar.t)
    return 0
}
